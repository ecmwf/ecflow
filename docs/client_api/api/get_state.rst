
.. _get_state_cli:

get_state
/////////







.. rubric:: Output of :code:`--help=get_state`



The following help text is generated by :code:`ecflow_client --help=get_state`

::

   
   get_state
   ---------
   
   Get state data. For the whole suite definition or individual nodes.
   This will include event, meter, node state, trigger and time state.
   The output is written to standard out.
     arg = NULL | arg = node path
   Usage:
     --get_state     # gets the definition from the server,and writes to standard out
     --get_state=/s1 # gets the suite from the server,and writes to standard out
   
   The client considers, for both user and child commands, the following environment variables:
   
     ECF_HOST <string> [mandatory*]
       The main server hostname; default value is 'localhost'
     ECF_PORT <int> [mandatory*]
       The main server port; default value is '3141'
     ECF_SSL <any> [optional*]
       Enable secure communication between client and server.
     ECF_HOSTFILE <string> [optional]
       File that lists alternate hosts to try, if connection to main host fails
     ECF_HOSTFILE_POLICY <string> [optional]
       The policy ('task' or 'all') to define which commands consider using alternate hosts.
   
   The options marked with (*) must be specified in order for the client to communicate
   with the server, either by setting the environment variables or by specifying the
   command line options.
   

