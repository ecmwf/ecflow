
.. _archive_cli:

archive
///////







.. rubric:: Output of :code:`--help=archive`



The following help text is generated by :code:`ecflow_client --help=archive`

::

   
   archive
   -------
   
   Archives suite or family nodes *IF* they have child nodes(otherwise does nothing).
   Saves the suite/family nodes to disk, and then removes the child nodes from the definition.
   This saves memory in the server, when dealing with huge definitions that are not needed.
   It improves time taken to checkpoint and reduces network bandwidth.
   If the node is re-queued or begun, the child nodes are automatically restored.
   Use --restore to reload the archived nodes manually
   Care must be taken if you have trigger reference to the archived nodes
   The nodes are saved to the file ECF_HOME/<hostname>.<port>.<ECF_NAME>.check,
   where '/' has been replaced with ':' in ECF_NAME
   
   Nodes like (family and suites) can also to automatically archived by using,
   the 'autoarchive' attribute. The attribute is only applied once the node is complete
   
   suite autoarchive
    family f1
       autoarchive +01:00 # archive one hour after complete
       task t1
    endfamily
    family f2
        autoarchive 01:00 # archive at 1 am in morning after complete
       task t1
    endfamily
    family f3
       autoarchive 10     # archive 10 days after complete
       task t1
    endfamily
    family f4
       autoarchive 0      # archive immediately (upto 60s) after complete
       task t1
     endfamily
   endsuite
   
   Usage::
      --archive=/s1           # archive suite s1
      --archive=/s1/f1 /s2    # archive family /s1/f1 and suite /s2
      --archive=force /s1 /s2 # archive suites /s1,/s2 even if they have active tasks
   
   The client considers, for both user and child commands, the following environment variables:
   
     ECF_HOST <string> [mandatory*]
       The main server hostname; default value is 'localhost'
     ECF_PORT <int> [mandatory*]
       The main server port; default value is '3141'
     ECF_SSL <any> [optional*]
       Enable secure communication between client and server.
     ECF_HOSTFILE <string> [optional]
       File that lists alternate hosts to try, if connection to main host fails
     ECF_HOSTFILE_POLICY <string> [optional]
       The policy ('task' or 'all') to define which commands consider using alternate hosts.
   
   The options marked with (*) must be specified in order for the client to communicate
   with the server, either by setting the environment variables or by specifying the
   command line options.
   

