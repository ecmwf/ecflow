
.. _abort_cli:

abort
*****







.. rubric:: Output of :code:`--help=abort`



The following help text is generated by :code:`ecflow_client --help=abort`

::

   
   abort
   -----
   
   Mark task as aborted. For use in the '.ecf' script file *only*
   Hence the context is supplied via environment variables
     arg1 = (optional) string(reason)
            Optionally provide a reason why the abort was raised
   
   If this child command is a zombie, then the default action will be to *block*.
   The default can be overridden by using zombie attributes.
   Otherwise the blocking period is defined by ECF_TIMEOUT.
   
   Usage:
     ecflow_client --abort=reasonX
   
   The client considers, for both user and child commands, the following environment variables:
   
     ECF_HOST <string> [mandatory*]
       The main server hostname; default value is 'localhost'
     ECF_PORT <int> [mandatory*]
       The main server port; default value is '3141'
     ECF_SSL <any> [optional*]
       Enable secure communication between client and server.
     ECF_HOSTFILE <string> [optional]
       File that lists alternate hosts to try, if connection to main host fails
     ECF_HOSTFILE_POLICY <string> [optional]
       The policy ('task' or 'all') to define which commands consider using alternate hosts.
   
   The options marked with (*) must be specified in order for the client to communicate
   with the server, either by setting the environment variables or by specifying the
   command line options.
   
   The following environment variables are used specifically by child commands:
   
     ECF_NAME <string> [mandatory]
       Full path name to the task
     ECF_PASS <string> [mandatory]
       The job password (defined by the server, and used to authenticate client requests)
     ECF_TRYNO <int> [mandatory]
       The run number of the job (defined by the server, and used in job/output file name generation.
     ECF_RID <string> [mandatory]
       The process identifier. Supports identifying zombies and automated killing of running jobs
     ECF_TIMEOUT <int> [optional]
       Maximum time in *seconds* for client to deliver message to main server; default is 24 hours
     ECF_DENIED <any> [optional]
       Allows task to exit with an error, upon connection failure, thus avoids ECF_TIMEOUTs wait.
     NO_ECF <any> [optional]
       If set, ecflow_client exits immediately with success; useful to test the scripts without a server
   
   The scripts are expected to export the mandatory variables, typically in shared include files
   

