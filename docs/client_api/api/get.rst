
.. _get_cli:

get
***



.. rubric:: Description




The CLI command **get** can be used to **show** the definition that is
loaded in the server.

Get all-suite node trees from the server and write to standard out.

.. code-block:: shell

  ecflow_client --get

This gets the suite "s1" from the server and writes to standard out. In
both of the examples, the output is fully parse-able

.. code-block:: shell

  ecflow_client --get=/s1  

To write the node tree **state** to standard output please use group
option, i.e.

.. code-block:: shell

  ecflow_client --get_state
  ecflow_client --get_state=/s1



.. rubric:: Output of :code:`--help=get`



The following help text is generated by :code:`ecflow_client --help=get`

::

   
   get
   ---
   
   Get the suite definition or node tree in form that is re-parse able
   Get all suite node tree's from the server and write to standard out.
   The output is parse-able, and can be used to re-load the definition
     arg = NULL | arg = node path
   Usage:
     --get     # gets the definition from the server,and writes to standard out
     --get=/s1 # gets the suite from the server,and writes to standard out
   
   The client considers, for both user and child commands, the following environment variables:
   
     ECF_HOST <string> [mandatory*]
       The main server hostname; default value is 'localhost'
     ECF_PORT <int> [mandatory*]
       The main server port; default value is '3141'
     ECF_SSL <any> [optional*]
       Enable secure communication between client and server.
     ECF_HOSTFILE <string> [optional]
       File that lists alternate hosts to try, if connection to main host fails
     ECF_HOSTFILE_POLICY <string> [optional]
       The policy ('task' or 'all') to define which commands consider using alternate hosts.
   
   The options marked with (*) must be specified in order for the client to communicate
   with the server, either by setting the environment variables or by specifying the
   command line options.
   

