
.. _sync_clock_cli:

sync_clock
//////////







.. rubric:: Output of :code:`--help=sync_clock`



The following help text is generated by :code:`ecflow_client --help=sync_clock`

::

   
   sync_clock
   ----------
   
   Incrementally synchronise the local definition with the one in the server.
   *Important* for use with c++/python interface only.
   Same as sync, but will *always* sync with suite clock if it has changed.
   Preference should be given to this method as only the changes are returned.
   This reduces the network bandwidth required to keep in sync with the server
   Requires a client handle, change and modify number, to get the incremental changes from server.
   The change in server state is then and merged with the client definition.
   
   The client considers, for both user and child commands, the following environment variables:
   
     ECF_HOST <string> [mandatory*]
       The main server hostname; default value is 'localhost'
     ECF_PORT <int> [mandatory*]
       The main server port; default value is '3141'
     ECF_SSL <any> [optional*]
       Enable secure communication between client and server.
     ECF_HOSTFILE <string> [optional]
       File that lists alternate hosts to try, if connection to main host fails
     ECF_HOSTFILE_POLICY <string> [optional]
       The policy ('task' or 'all') to define which commands consider using alternate hosts.
   
   The options marked with (*) must be specified in order for the client to communicate
   with the server, either by setting the environment variables or by specifying the
   command line options.
   

