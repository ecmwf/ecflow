
.. _show_cli:

show
****







.. rubric:: Output of :code:`--help=show`



The following help text is generated by :code:`ecflow_client --help=show`

::

   
   show
   ----
   
   Used to print state of the definition returned from the server to standard output.
   This command can *only* be used in a group command, and will only work if it is
   preceded with a get command. See examples below.
      arg1 = [ defs | state | migrate ] 
   The output of show has several options: i.e
     o no arguments: With no arguments, print the definition structure to standard output
       Extern's are automatically added, allowing the output to be reloaded into the server
       i.e --group="get ; show"
     o state:
       This will output definition structure along with all the state information.
       This will include the trigger expressions, abstract syntax tree as comments.
       Excludes the edit history
     o migrate:
       This will output definition structure along with all the state information.
       The node state is shown in the comments.
       This format allows the definition to be migrated to future version of ecflow.
       The output includes edit history but excludes externs.
       When the definition is reloaded *NO* checking is done.
   
   The following shows a summary of the features associated with each choice
                           DEFS          STATE      MIGRATE
   Auto generate externs   Yes           Yes        No
   Checking on reload      Yes           Yes        No
   Edit History            No            No         Yes
   trigger AST             No            Yes        No
   
   Usage:
       --group="get ; show"
       --group="get ; show defs"    # same as the previous example
       --group="get ; show state"   # Show all state for the node tree
       --group="get ; show migrate" # Shows state and allows migration
       --group="get=/s1; show"      # show state for the node only
       --group="get=/s1; show state"
   
   The client considers, for both user and child commands, the following environment variables:
   
     ECF_HOST <string> [mandatory*]
       The main server hostname; default value is 'localhost'
     ECF_PORT <int> [mandatory*]
       The main server port; default value is '3141'
     ECF_SSL <any> [optional*]
       Enable secure communication between client and server.
     ECF_HOSTFILE <string> [optional]
       File that lists alternate hosts to try, if connection to main host fails
     ECF_HOSTFILE_POLICY <string> [optional]
       The policy ('task' or 'all') to define which commands consider using alternate hosts.
   
   The options marked with (*) must be specified in order for the client to communicate
   with the server, either by setting the environment variables or by specifying the
   command line options.
   

