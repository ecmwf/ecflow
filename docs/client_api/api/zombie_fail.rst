
.. _zombie_fail_cli:

zombie_fail
///////////







.. rubric:: Output of :code:`--help=zombie_fail`



The following help text is generated by :code:`ecflow_client --help=zombie_fail`

::

   
   zombie_fail
   -----------
   
   Locates the task in the servers list of zombies, and sets to fail.
   Next time a child command (init,event,meter,label,abort,complete) which matches zombie, communicates with the server, will be set to fail.
   Depending on the job setup this may force a abort, the abort will also fail.
   Hence job structure should use 'set -e' in the error trapping functions to prevent
   infinite recursion.
   The references to the zombie in the server is automatically deleted after 1 hour
     args = list of task paths, at least one expected
     --zombie_fail=/path/to/task  /path/to/task2
   
   The client considers, for both user and child commands, the following environment variables:
   
     ECF_HOST <string> [mandatory*]
       The main server hostname; default value is 'localhost'
     ECF_PORT <int> [mandatory*]
       The main server port; default value is '3141'
     ECF_SSL <any> [optional*]
       Enable secure communication between client and server.
     ECF_HOSTFILE <string> [optional]
       File that lists alternate hosts to try, if connection to main host fails
     ECF_HOSTFILE_POLICY <string> [optional]
       The policy ('task' or 'all') to define which commands consider using alternate hosts.
   
   The options marked with (*) must be specified in order for the client to communicate
   with the server, either by setting the environment variables or by specifying the
   command line options.
   

